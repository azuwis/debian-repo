#!/bin/bash
set -e
export debian_chroot="pbuilder"

if [ x"$1" = x"-s" ]; then
  run_shell="true"
  shift
fi

arch=$1
shift

deb="$(basename "$1")"
version_append=$2
revision_append=$3

if [ x"$version_append" = x"-" ]; then
  version_append=""
fi

source=$(basename $deb | awk -F_ '{print $1}')
revision=$(basename $deb | awk -F_ '{print $2}')
ncpu=$(grep -c '^processor' /proc/cpuinfo)
conf_script="/tmp/buildd/kpkg-${version_append}"

apt-get install -y kernel-package bc cpio libncurses-dev
dpkg -i /tmp/buildd/$deb

build_dir=/tmp/buildd/build
mkdir $build_dir
chown nobody\: $build_dir

cat <<EOF >${build_dir}/build.sh
#!/bin/bash
cd $build_dir

if [ ! -d ${source} ]; then
  tar xf /usr/src/${source}.tar.*
  cd ${source}
  if [ -f /usr/src/${source/source/config}/config.${arch}_none_${arch}.xz ]; then
    xzcat /usr/src/${source/source/config}/config.${arch}_none_${arch}.xz > .config
  elif [ -f /tmp/buildd/config ] ;then
    cp /tmp/buildd/config .config
  else
    echo "please provide .config file"
    exit 1
  fi

  if [ -f "$conf_script" ]; then
    bash -x "$conf_script"
  fi
fi

export KPKG_MAINTAINER="Zhong Jianxin"
export KPKG_EMAIL="azuwis@gmail.com"
export DELETE_BUILD_LINK=YES
export INITRD=YES
export APPEND_TO_VERSION="${version_append:+-${version_append}}-${arch}"
export DEBIAN_REVISION="${revision}${revision_append:+-${revision_append}}"
export CONCURRENCY_LEVEL=${ncpu}
export IMAGE_CLEAN_HOOK="/tmp/buildd/kpkg_image_clean_hook"
export HEADER_CLEAN_HOOK="/tmp/buildd/kpkg_header_clean_hook"
fakeroot make-kpkg binary-arch
EOF

chmod +x ${build_dir}/build.sh

if [ x"$run_shell" = x"true" ]; then
  cd $build_dir; bash </dev/tty > /dev/tty 2> /dev/tty
else
  su -c "bash -x ${build_dir}/build.sh" - nobody
fi

cp ${build_dir}/*.deb $BIND_DIR
